const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function resetDailyUsage() {
  console.log('üîÑ G√ºnl√ºk API istifad…ô sayƒüaclarƒ±nƒ± sƒ±fƒ±rlayƒ±r...\n');
  
  try {
    const result = await prisma.apiKey.updateMany({
      data: {
        dailyUsage: 0
      }
    });
    
    console.log(`‚úÖ ${result.count} API a√ßarƒ±nƒ±n g√ºnl√ºk istifad…ôsi sƒ±fƒ±rlandƒ±`);
    
    console.log('\nüìä Yenil…ônmi≈ü API A√ßarlarƒ±:');
    console.log('='.repeat(50));
    
    const updatedKeys = await prisma.apiKey.findMany({
      select: {
        service: true,
        active: true,
        dailyUsage: true,
        dailyLimit: true,
        usageCount: true
      },
      orderBy: { service: 'asc' }
    });
    
    updatedKeys.forEach(key => {
      console.log(`${key.service}: ${key.dailyUsage}/${key.dailyLimit} (√úmumi: ${key.usageCount}) - ${key.active ? 'Aktiv' : 'Deaktiv'}`);
    });
    
  } catch (error) {
    console.error('‚ùå X…ôta:', error);
  } finally {
    await prisma.$disconnect();
  }
}

resetDailyUsage();